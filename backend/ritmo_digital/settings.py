"""
Django settings for ritmo_digital project.

Generated by 'djangocms' command using django CMS 4.1.2 and Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of Django settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/

For the list of django CMS settings and their values, see
https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html
"""

from datetime import timedelta
import os
from pathlib import Path


from django.utils.translation import gettext_lazy as _

# BASE_DIR apontando para o diretório `backend`
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hpt4v(%1w%jv4h@%gnt$sna)9t^07#bkpr^o(2_t53s#x$nz0a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'djangocms_admin_style',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'versatileimagefield',
    # CMS base apps
    'cms',
    'menus',
    'djangocms_text_ckeditor',
    'djangocms_alias',
    'djangocms_versioning',
    'sekizai',
    'treebeard',
    'parler',
    'filer',
    'easy_thumbnails',
    'material',
    'material.admin', 
    'djangocms_frontend',
    'djangocms_frontend.contrib.accordion',
    'djangocms_frontend.contrib.alert',
    'djangocms_frontend.contrib.badge',
    'djangocms_frontend.contrib.card',
    'djangocms_frontend.contrib.carousel',
    'djangocms_frontend.contrib.collapse',
    'djangocms_frontend.contrib.content',
    'djangocms_frontend.contrib.grid',
    'djangocms_frontend.contrib.icon',
    'djangocms_frontend.contrib.image',
    'djangocms_frontend.contrib.jumbotron',
    'djangocms_frontend.contrib.link',
    'djangocms_frontend.contrib.listgroup',
    'djangocms_frontend.contrib.media',
    'djangocms_frontend.contrib.navigation',
    'djangocms_frontend.contrib.tabs',
    'djangocms_frontend.contrib.utilities',
    'djangocms_picture',
    'djangocms_video',
    'djangocms_snippet',
    'backend.domain.website',
    'backend.domain.shared',
    'backend.domain.blog',
    'backend.orchestration',
    'backend.apis',
    'backend.infrastructure',
    'backend.domain.projects'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # Opcional
        'rest_framework.authentication.BasicAuthentication',     # Opcional
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # Tempo de vida do token de acesso
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # Tempo de vida do token de atualização
    'ROTATE_REFRESH_TOKENS': True,                  # Gira os tokens de atualização
    'BLACKLIST_AFTER_ROTATION': True,               # Lista negra após rotação de tokens
    'ALGORITHM': 'HS256',                           # Algoritmo de assinatura do JWT
    'SIGNING_KEY': 'sua-chave-secreta',             # Chave secreta usada para assinar os tokens
    'AUTH_HEADER_TYPES': ('Bearer',),               # Tipo de cabeçalho usado para enviar o token
}


# permite requisições de qualquer origem
CORS_ALLOW_ALL_ORIGINS = True

# Permitir apenas requisições de origens específicas:
CORS_ALLOWED_ORIGINS = [
    #"https://example.com",
    #"https://sub.example.com",
]

# Métodos aceitos
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

# Configurações de quais cabeçalhos HTTP personalizados são permitidos:
CORS_ALLOW_HEADERS = [
    #"authorization",
    #"content-type",
    #"x-csrftoken",
    #"x-requested-with",
]

ROOT_URLCONF = 'ritmo_digital.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            r'C:\Users\lucia\projeto_ritmo\loja\ritmo_digital\backend\website\templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
            ],
        },
    },
]

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)

WSGI_APPLICATION = 'ritmo_digital.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ritmo_luciano',
        'USER': 'postgres',
        'PASSWORD': '4053',
        'HOST': 'localhost',
        'PORT': '5432',
        },
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Validação de senhas
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        # Validador que verifica a similaridade da senha 
        # com atributos do usuário (ex.: nome de usuário)
        'NAME': 'django.contrib.auth.password_validation.'
                        'UserAttributeSimilarityValidator',
        
    },
    {
        # Validador que define o comprimento mínimo da senha
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
            # Comprimento mínimo da senha (neste caso, 8 caracteres)
        }
    },
    {
        # Validador que proíbe senhas comuns ou fáceis de adivinhar
        'NAME': 'django.contrib.auth.password_validation.'
                                    'CommonPasswordValidator',
        
    },
    {   
        # Validador que proíbe senhas que contenham apenas números
        'NAME': 'django.contrib.auth.password_validation.'
                                'NumericPasswordValidator',
        
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

# Configurar as opções de idioma disponíveis
LANGUAGES = [
    ('pt-br', 'Português (Brasil)'),
]
TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True
USE_L10N = True
USE_THOUSAND_SEPARATOR = True

USE_TZ = True

# Configuração para arquivos estáticos
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'backend/domain/website/static'),
]
CKEDITOR_UPLOAD_PATH = "uploads/"

# STATIC_ROOT é usado para coletar todos os arquivos estáticos em
# comando para servir o storage python manage.py collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django.contrib.staticfiles.finders.DefaultStorageFinder',
]

# Configuração para arquivos de mídia
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# This is a django CMS 4 template

CMS_CONFIRM_VERSION4 = True

# django CMS requires the site framework
# https://docs.django-cms.org/en/release-4.1.x/how_to/multi-site.html

SITE_ID = 1

# Configurar o idioma padrão
LANGUAGE_CODE = 'pt-br'

# Configurar a localização padrão
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

CMS_LANGUAGES = {
   1: [
        {
            'code': 'pt-br',
            'name': 'Português (Brasil)',
            'fallbacks': ['en'],
            'public': True,
            'hide_untranslated': False,
            'redirect_on_fallback': True,
        },
             
    ],
    'default': {
        'fallbacks': ['pt-br', 'en'],
        'redirect_on_fallback': True,
        'public': True,
        'hide_untranslated': False,
    },
}

# A base template is part of this setup
# https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html#cms-templates

CMS_TEMPLATES = (
     ("base.html", _("Standard")),
     ("home.html", _("Homepage")),
)

# Enable permissions
# https://docs.django-cms.org/en/release-4.1.x/topics/permissions.html

CMS_PERMISSION = True

# Allow admin sidebar to open admin URLs

X_FRAME_OPTIONS = 'SAMEORIGIN'

# Enable inline editing with djangocms-text-ckeditor
# https://github.com/django-cms/djangocms-text-ckeditor#inline-editing-feature

TEXT_INLINE_EDITING = True

# Add project-wide static files directory
# https://docs.djangoproject.com/en/5.1/ref/settings/#staticfiles-dirs


INTERNAL_IPS = [
    "127.0.0.1",
]

# Add project-wide static files directory
# https://docs.djangoproject.com/en/5.1/ref/settings/#media-root
