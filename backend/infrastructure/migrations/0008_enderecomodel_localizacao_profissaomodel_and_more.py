# Generated by Django 5.0.9 on 2024-09-21 17:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.sites.models
import django.db.models.deletion
import django.db.models.fields
import django.utils.timezone
import djangocms_text_ckeditor.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('infrastructure', '0007_alter_artefatopluginmodel_table_and_more'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnderecoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rua', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('complemento', models.CharField(blank=True, max_length=50, null=True)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=100)),
                ('cep', models.CharField(max_length=20)),
                ('pais', models.CharField(default='Brasil', max_length=100)),
                ('tipo', models.CharField(choices=[('residencial', 'Residencial'), ('comercial', 'Comercial'), ('correspondencia', 'Correspondência')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('data_inicio', models.DateTimeField(auto_now_add=True)),
                ('data_fim', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
                'db_table': 'infrastructure_endereco',
            },
        ),
        migrations.CreateModel(
            name='Localizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('precisao', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('estado', models.CharField(blank=True, max_length=100, null=True)),
                ('pais', models.CharField(blank=True, max_length=100, null=True)),
                ('data_hora_captura', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Localização',
                'verbose_name_plural': 'Localizações',
                'db_table': 'infrastructure_localizacao',
            },
        ),
        migrations.CreateModel(
            name='ProfissaoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('descricao', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Profissão',
                'verbose_name_plural': 'Profissões',
                'db_table': 'infrastructure_profissao',
            },
        ),
        migrations.CreateModel(
            name='ReacaoDetalhe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('icone', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Detalhe da Reação',
                'verbose_name_plural': 'Detalhes das Reações',
                'db_table': 'infrastructure_reacao_detalhe',
            },
        ),
        migrations.AlterField(
            model_name='pluginmodel',
            name='id',
            field=models.UUIDField(default=django.db.models.fields.UUIDField, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='pluginmodel',
            name='status',
            field=models.CharField(default=None, max_length=20),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'db_table': 'infrastructure_blog',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='infrastructure.blog')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Categoria de Blog',
                'verbose_name_plural': 'Categorias de Blog',
                'db_table': 'infrastructure_categoria_blog',
            },
        ),
        migrations.CreateModel(
            name='CustomSite',
            fields=[
                ('site_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sites.site')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Personalizado',
                'verbose_name_plural': 'Sites Personalizados',
                'db_table': 'infrastructure_custom_site',
            },
            bases=('sites.site', models.Model),
            managers=[
                ('objects', django.contrib.sites.models.SiteManager()),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='infrastructure.customsite'),
        ),
        migrations.CreateModel(
            name='PessoaFisicaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('conta_pessoa', models.BooleanField(default=True)),
                ('primeiro_nome', models.CharField(max_length=255)),
                ('sobrenome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('nome', models.CharField(max_length=255)),
                ('ocupacao', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('redes_sociais', models.CharField(blank=True, max_length=500, null=True)),
                ('cpf', models.CharField(max_length=11, unique=True)),
                ('genero', models.CharField(choices=[('homem', 'Homem'), ('mulher', 'Mulher'), ('homem bissexual', 'Homem Bissexual'), ('homem trans', 'Homem Trans'), ('mulher bissexual', 'Mulher Bissexual'), ('mulher trans', 'Mulher Trans')], max_length=20)),
                ('iniciador_conta_empresa', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('enderecos', models.ManyToManyField(blank=True, related_name='pessoas_fisicas', to='infrastructure.enderecomodel')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence.', related_name='pessoa_fisica_groups', to='auth.group', verbose_name='Grupos')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas deste usuário.', related_name='pessoa_fisica_permissions', to='auth.permission', verbose_name='Permissões de usuário')),
                ('profissao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pessoas_fisicas', to='infrastructure.profissaomodel')),
            ],
            options={
                'verbose_name': 'Pessoa Física',
                'verbose_name_plural': 'Pessoas Físicas',
                'db_table': 'infrastructure_pessoa_fisica',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='enderecomodel',
            name='pessoa_fisica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enderecos_fisica', to='infrastructure.pessoafisicamodel'),
        ),
        migrations.CreateModel(
            name='ComentarioPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('comentario', models.TextField()),
                ('data_comentario', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('aguardando', 'Aguardando Aprovação'), ('aprovado', 'Aprovado'), ('publicado', 'Publicado')], default='aguardando', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.pessoafisicamodel')),
            ],
            options={
                'verbose_name': 'Comentário do Post',
                'verbose_name_plural': 'Comentários dos Posts',
                'db_table': 'infrastructure_comentario_post',
                'ordering': ['-data_comentario'],
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='proprietario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='infrastructure.pessoafisicamodel'),
        ),        
        migrations.CreateModel(
            name='PessoaJuridicaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(max_length=255)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=14, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('enderecos', models.ManyToManyField(related_name='pessoa_juridica_enderecos', to='infrastructure.enderecomodel')),
                ('iniciador_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresas_iniciadas', to='infrastructure.pessoafisicamodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('usuario_titular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresas_titulares', to='infrastructure.pessoafisicamodel')),
            ],
            options={
                'verbose_name': 'Pessoa Jurídica',
                'verbose_name_plural': 'Pessoas Jurídicas',
                'db_table': 'infrastructure_pessoa_juridica',
            },
        ),
        migrations.AddField(
            model_name='enderecomodel',
            name='pessoa_juridica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enderecos_juridica', to='infrastructure.pessoajuridicamodel'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('content', djangocms_text_ckeditor.fields.HTMLField()),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('numero_compartilhamentos', models.IntegerField(default=0)),
                ('compartilhado', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('concluido', 'Concluído'), ('publicado', 'Publicado'), ('removido', 'Removido')], default='rascunho', max_length=20)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='infrastructure.blog')),
                ('comentarios', models.ManyToManyField(blank=True, related_name='posts', to='infrastructure.comentariopost')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('reacoes', models.ManyToManyField(blank=True, related_name='posts', to='infrastructure.reacaodetalhe')),
            ],
            options={
                'verbose_name': 'Postagem de Blog',
                'verbose_name_plural': 'Postagens de Blog',
                'db_table': 'infrastructure_post',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='ImagemPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('imagem', models.ImageField(upload_to='uploads/posts/')),
                ('legenda', models.CharField(blank=True, max_length=255, null=True)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens', to='infrastructure.post')),
            ],
            options={
                'verbose_name': 'Imagem do Post',
                'verbose_name_plural': 'Imagens do Post',
                'db_table': 'infrastructure_imagem_post',
            },
        ),
        migrations.CreateModel(
            name='CompartilhamentoPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_compartilhamento', models.DateTimeField(auto_now_add=True)),
                ('total_compartilhamentos', models.IntegerField(default=0)),
                ('localizacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.localizacao')),
                ('pessoa_fisica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.pessoafisicamodel')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.post')),
            ],
            options={
                'verbose_name': 'Compartilhamento de Post',
                'verbose_name_plural': 'Compartilhamentos de Post',
                'db_table': 'infrastructure_compartilhamento_post',
            },
        ),
        migrations.AddField(
            model_name='comentariopost',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.post'),
        ),
        migrations.CreateModel(
            name='ReacaoComentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_reacao', models.DateTimeField(auto_now_add=True)),
                ('comentario_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.comentariopost')),
                ('localizacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.localizacao')),
                ('pessoa_fisica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.pessoafisicamodel')),
                ('reacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.reacaodetalhe')),
            ],
            options={
                'verbose_name': 'Reação em Comentário',
                'verbose_name_plural': 'Reações em Comentários',
                'db_table': 'infrastructure_reacao_comentario',
            },
        ),
        migrations.CreateModel(
            name='Subdominio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdominios', to='infrastructure.customsite')),
            ],
            options={
                'db_table': 'infrastructure_subdominio',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='infrastructure.blog')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag de Blog',
                'verbose_name_plural': 'Tags de Blog',
                'db_table': 'infrastructure_tag',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='infrastructure.tag'),
        ),
        migrations.CreateModel(
            name='PermissaoWebsite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default=None, max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='website_permissions', to='auth.permission')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_permissions', to='infrastructure.customsite')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
               
            ],
            options={
                'verbose_name': 'Permissão de Website',
                'verbose_name_plural': 'Permissões de Website',
                'db_table': 'infrastructure_permissao_website',
            },
        ),
        migrations.CreateModel(
            name='VisualizacaoPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_visualizacao', models.DateTimeField(auto_now_add=True)),
                ('localizacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.localizacao')),
                ('pessoa_fisica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.pessoafisicamodel')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizacoes', to='infrastructure.post')),
            ],
            options={
                'verbose_name': 'Visualização de Post',
                'verbose_name_plural': 'Visualizações de Post',
                'db_table': 'infrastructure_visualizacao_post',
            },
        ),
        migrations.CreateModel(
            name='VotacaoPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voto', models.CharField(choices=[('positivo', 'Positivo'), ('negativo', 'Negativo')], default='positivo', max_length=10)),
                ('data_votacao', models.DateTimeField(auto_now_add=True)),
                ('localizacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.localizacao')),
                ('pessoa_fisica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='infrastructure.pessoafisicamodel')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.post')),
            ],
            options={
                'verbose_name': 'Votação de Post',
                'verbose_name_plural': 'Votações de Post',
                'db_table': 'infrastructure_votacao_post',
            },
        ),
        migrations.AddConstraint(
            model_name='subdominio',
            constraint=models.UniqueConstraint(fields=('site', 'nome'), name='unique_site_nome'),
        ),
    ]
